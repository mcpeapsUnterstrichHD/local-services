services:
  #caddy:
  #  container_name: caddy-comboom.sucht
  #  image: caddy:2-alpine
  #  pull_policy: always
  #  network_mode: host
  #  volumes:
  #    - ./Caddyfile:/etc/caddy/Caddyfile:ro
  #    - caddy-data:/data:rw
  #    - caddy-config:/config:rw
  #  environment:
  #    - SEARXNG_HOSTNAME=search.localhost
  #    - IT_TOOLS_HOSTNAME=it-tools.localhost
  #    - STIRLING_PDF_HOSTNAME=stirling-pdf.localhost
  #    - DEV_HOSTNAME=dev.localhost
  #    - APACHE2_HOSTNAME=apache2.localhost
  #    - PORTAINER_HOSTNAME=portainer.localhost
  #    - HOMER_HOSTNAME=localhost
  #    - PUTTER_HOSTNAME=os.localhost
  #    - TLS=internal
  #  cap_drop:
  #    - ALL
  #  cap_add:
  #    - NET_BIND_SERVICE
  #  restart: always
  nginx_proxy_manager:
    container_name: nginx-proxy-manager-comboom.sucht
    image: 'jc21/nginx-proxy-manager:latest'
    restart: always
    pull_policy: always
    #ports:
    #  # These ports are in format <host-port>:<container-port>
    #  - '80:80' # Public HTTP Port
    #  - '443:443' # Public HTTPS Port
    #  - '81:81' # Admin Web Port
    #  # Add any other Stream port you want to expose
    #  - '21:21' # FTP
    environment:
      # Uncomment this if you want to change the location of
      # the SQLite DB file within the container
      DB_SQLITE_FILE: "/data/database.sqlite"
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
    volumes:
      - ./ngninx/data:/data
      - ./ngninx/ssl:/etc/letsencrypt
    network_mode: host
    labels:
      glance.name: Nginx Proxy Manager
      glance.icon: si:nginxproxymanager
      glance.url: http://npm.localhost
      glance.description: Reverse proxy
      glance.id: npm
      glance.tags: "type:proxy, type:management, type:reverse, type:service, type:web, type:gui"
      glance.hide: false
  searxng:
    container_name: searxng-comboom.sucht
    image: searxng/searxng:latest
    pull_policy: always
    networks:
      - local-services
    ports:
      - "8082:8080"
    volumes:
      - searxng-data:/etc/searxng:rw
      - ./searxng/settings.yml:/etc/searxng/settings.yml:rw
      - ./searxng/limiter.toml:/etc/searxng/limiter.toml:rw
    environment:
      - SEARXNG_BASE_URL=https://search.localhost
      - INSTANCE_NAME=comboom.sucht
    restart: always
    labels:
      glance.name: SearXNG
      glance.icon: si:searxng
      glance.url: http://search.localhost
      glance.description: Search engine
      glance.id: searxng
      glance.tags: "type:search, type:service, type:web, type:gui"
      glance.hide: false
  it-tools:
    container_name: it-tools-comboom.sucht
    image: ghcr.io/sharevb/it-tools:nightly
    pull_policy: always
    ports:
      - "8081:8080"
    environment:
      NODE_ENV: production
    networks:
      - local-services
    restart: always
    labels:
      glance.name: IT Tools
      glance.icon: di:it-tools
      glance.url: http://it-tools.localhost
      glance.description: Collection of handy online tools for developers, with great UX.
      glance.id: it-tools
      glance.tags: "type:it,type:tools, type:service, type:web, type:gui"
      glance.hide: false
  stirling-pdf:
    container_name: stirling-pdf-comboom.sucht
    image: stirlingtools/stirling-pdf:latest-fat
    pull_policy: always
    ports:
      - '8080:8080'
    volumes:
      - ./pdf/trainingData:/usr/share/tessdata #Required for extra OCR languages
      - ./pdf/extraConfigs:/configs
      - ./pdf/customFiles:/customFiles/
      - ./pdf/logs:/logs/
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - SERVER_HOSTNAME=stirling-pdf.localhost
    deploy:
      resources:
        limits:
          cpus: '4.0'
    networks:
      - local-services
    restart: always
    labels:
      glance.name: Sirling PDF
      glance.icon: di:stirling-pdf
      glance.url: http://stirling-pdf.localhost
      glance.description: Local hosted web based PDF editor
      glance.id: stirling-pdf
      glance.tags: "type:pdf, type:conversion, type:service, type:web, type:gui"
      glance.hide: false
  portainer:
    container_name: portainer-comboom.sucht
    image: portainer/portainer-ce:latest
    #pull_policy: always
    ports:
            - '8083:9000'
            - '8084:9443'
            - '8000:8000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    restart: always
    networks:
      - local-services
    labels:
      glance.name: Portainer
      glance.icon: si:portainer
      glance.url: http://portainer.localhost
      glance.description: Docker management
      glance.id: portainer
      glance.tags: "type:docker, type:management, type:service, type:web, type:gui"
      glance.hide: false
  mariadb:
    image: mariadb:latest
    pull_policy: always
    container_name: mariadb-comboom.sucht
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: fabian66
    networks:
      - local-services
    volumes:
      - ./all-databases.sql:/all-databases.sql:ro
      - ./mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    labels:
      glance.name: MariaDB
      glance.icon: si:mariadb
      glance.description: Database
      glance.id: mariadb
      glance.parent: phpmyadmin
      glance.tags: "type:database"
      glance.hide: false

  phpmyadmin:
    pull_policy: always
    container_name: phpmyadmin-comboom.sucht
    links:
      - mariadb:db
    image: phpmyadmin
    restart: always
    ports:
      - 8085:80
    volumes:
      - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
      - ./phpmyadmin/themes:/var/www/html/themes
    environment:
      - PMA_ARBITRARY=1
    networks:
      - local-services
    labels:
      glance.name: phpMyAdmin
      glance.icon: si:phpmyadmin
      glance.url: http://phpmyadmin.localhost
      glance.description: Database management
      glance.id: phpmyadmin
      glance.tags: "type:web,type:database,type:gui"
      glance.hide: false
  glance:
    container_name: glance-comboom.sucht
    image: glanceapp/glance
    pull_policy: always
    network_mode: host
    restart: always
    volumes:
      - ./glance/config:/app/config
      - ./glance/assets:/app/assets
      # Optionally, also mount docker socket if you want to use the docker containers widget
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file: ./glance/.env
    labels:
      glance.name: Glance
      glance.description: Dashboard
      glance.id: glance
      glance.icon: di:glance
      glance.url: http://dashboard.localhost/home
      glance.tags: "type:web,type:dashboard"
      glance.hide: false

networks:
  local-services:
    ipam:
      driver: default
volumes:
  caddy-data:
  caddy-config:
  redis-data:
  searxng-data:
  portainer-data:
  mariadb-data:
